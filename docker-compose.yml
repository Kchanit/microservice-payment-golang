version: "3"
services:
  django:
    image: ratchaphon1412/djangoauth:prod
    container_name: django
    environment:
      - VAULT_TOKEN=${VAULT_TOKEN}
      - VAULT_URI=${VAULT_ADDR}
      - VAULT_PATH=${VAULT_PATH_DJANGO}
    ports:
      - "80:80"
    depends_on:
      - postgres
    networks:
      - kafka-nework
      - django
  djangodb:
    image: postgres:13.1-alpine
    container_name: djangodb
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGPORT=${PGPORT}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5433"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} "]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - django
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - default
    restart: unless-stopped

  web:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - .:/app
    networks:
      - kafka-nework
      - default
  zookeeper:
    image: "bitnami/zookeeper:3.7"
    restart: always
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - kafka-nework
    # message broker - kafka
    # reference: https://github.com/bitnami/bitnami-docker-kafka/blob/master/docker-compose.yml
  kafka:
    image: "bitnami/kafka:latest"
    restart: always
    container_name: kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"

    ports:
      - "9092:9092"
    networks:
      - kafka-nework
    depends_on:
      - zookeeper
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

    networks:
      - kafka-nework
networks:
  kafka-nework:
    driver: bridge
  django:
    driver: bridge
  default:
volumes:
  postgres_data:
